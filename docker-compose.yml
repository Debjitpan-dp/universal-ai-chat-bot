version: '3.8'

services:
  api:
    build: .
    container_name: universal-ai-chat-api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  streamlit:
    build: .
    container_name: universal-ai-chat-streamlit
    ports:
      - "8501:8501"
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
    command: streamlit run streamlit_app.py --server.address 0.0.0.0 --server.port 8501
    depends_on:
      - api
    restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: universal-ai-chat-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Optional: PostgreSQL for persistent storage (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: universal-ai-chat-db
  #   environment:
  #     POSTGRES_DB: chat_db
  #     POSTGRES_USER: chat_user
  #     POSTGRES_PASSWORD: chat_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

volumes:
  data:
  # redis_data:
  # postgres_data:

networks:
  default:
    name: universal-ai-chat-network